{"version":3,"sources":["actions/actions.js","components/visibility-filter-input/visibility-filter-input.jsx","components/movie-card/movie-card.jsx","components/movies-list/movies-list.jsx","components/registration-view/registration-view.jsx","components/login-view/login-view.jsx","components/movie-view/movie-view.jsx","components/director-view/director-view.jsx","components/phase-view/phase-view.jsx","components/profile-view/profile-view.jsx","components/main-view/main-view.jsx","reducers/reducers.js","App.js","reportWebVitals.js","index.js"],"names":["SET_MOVIES","SET_FILTER","SET_USER","connect","setFilter","value","type","props","Form","Control","onChange","e","target","visibilityFilter","placeholder","style","width","className","MovieCard","movie","this","Card","bg","text","border","Img","variant","height","src","ImagePath","Body","Title","Text","Description","Footer","to","_id","Button","block","React","Component","state","movies","filteredMovies","filter","m","toLowerCase","includes","Container","Row","map","RegistrationView","useState","username","setUsername","password","setPassword","email","setEmail","birthday","setBirthday","Group","controlId","Label","onClick","preventDefault","axios","post","Username","Password","Email","Birthday","then","response","data","console","log","window","open","catch","LoginView","onLoggedIn","MovieView","addToFavorites","token","localStorage","getItem","headers","Authorization","alert","error","sm","md","Col","alt","Phase","Name","Director","DirectorView","director","Header","Bio","Birth","PhaseView","phase","ProfileView","Favorites","validated","accessToken","getUser","get","setState","delete","componentDidMount","newUsername","newPassword","newEmail","newBirthday","currentTarget","checkValidity","stopPropagation","method","url","setItem","input","removeItem","Tabs","defaultActiveKey","transition","Tab","eventKey","title","color","length","find","favMovie","size","handleRemoveFavorite","noValidate","onSubmit","handleUpdate","pattern","Feedback","required","handleDeregister","MainView","user","setUser","getMovies","authData","setMovies","fluid","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Item","Link","onLogOut","exact","path","render","match","params","movieId","name","moviesApp","combineReducers","action","store","createStore","devToolsEnhancer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"2VAAaA,EAAa,aACbC,EAAa,aACbC,EAAW,W,kBCeTC,kBACb,KACA,CAAEC,UDRG,SAAmBC,GACxB,MAAO,CACLC,KAAML,EACNI,WCGWF,EAVf,SAA+BI,GAC7B,OAAO,cAACC,EAAA,EAAKC,QAAN,CACLC,SAAU,SAAAC,GAAC,OAAIJ,EAAMH,UAAUO,EAAEC,OAAOP,QACxCA,MAAOE,EAAMM,iBACbC,YAAY,mBACZC,MAAO,CAAEC,MAAO,SAChBC,UAAU,Y,OCJDC,G,OAAb,4JACE,WAAS,IAICC,EAAUC,KAAKb,MAAfY,MAER,OACA,eAACE,EAAA,EAAD,CAAMN,MAAO,CAAEC,MAAO,SAAWM,GAAG,SAASC,KAAK,QAAQC,OAAO,UAAUP,UAAU,OAArF,UACE,cAACI,EAAA,EAAKI,IAAN,CAAUC,QAAQ,MAAMV,MAAO,IAAKW,OAAQ,IAAKC,IAAKT,EAAMU,YAC5D,eAACR,EAAA,EAAKS,KAAN,WACE,cAACT,EAAA,EAAKU,MAAN,UAAaZ,EAAMY,QACnB,cAACV,EAAA,EAAKW,KAAN,UAAYb,EAAMc,iBAEpB,cAACZ,EAAA,EAAKa,OAAN,UACA,cAAC,OAAD,CAAMC,GAAE,kBAAahB,EAAMiB,KAA3B,SACI,cAACC,EAAA,EAAD,CAAQX,QAAQ,QAAQY,OAAK,EAA7B,6BAhBV,GAA+BC,IAAMC,YCqBtBrC,mBAvBS,SAAAsC,GAEtB,MAAO,CAAE5B,iBADoB4B,EAArB5B,oBAsBKV,EAlBf,SAAoBI,GAAQ,IAClBmC,EAA6BnC,EAA7BmC,OAAQ7B,EAAqBN,EAArBM,iBACZ8B,EAAiBD,EAMrB,MAJyB,KAArB7B,IACF8B,EAAiBD,EAAOE,QAAO,SAAAC,GAAC,OAAIA,EAAEd,MAAMe,cAAcC,SAASlC,EAAiBiC,mBAGjFJ,EAEE,eAACM,EAAA,EAAD,CAAW/B,UAAU,YAArB,UACL,cAAC,EAAD,CAAuBJ,iBAAkBA,IACzC,cAACoC,EAAA,EAAD,CAAKhC,UAAU,qCAAf,SACG0B,EAAeO,KAAI,SAAAL,GAAC,OAAI,cAAC,EAAD,CAAuB1B,MAAO0B,GAAdA,EAAET,aAL3B,qBAAKnB,UAAU,iB,QCb9B,SAASkC,EAAkB5C,GAAQ,IAAD,EACP6C,mBAAS,IADF,mBAChCC,EADgC,KACtBC,EADsB,OAEPF,mBAAS,IAFF,mBAEhCG,EAFgC,KAEtBC,EAFsB,OAGbJ,mBAAS,IAHI,mBAGhCK,EAHgC,KAGzBC,EAHyB,OAIPN,mBAAS,IAJF,mBAIhCO,EAJgC,KAItBC,EAJsB,KAwBvC,OACE,eAACZ,EAAA,EAAD,WACA,qDACA,eAACxC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKqD,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACtD,EAAA,EAAKuD,MAAN,yBACA,cAACvD,EAAA,EAAKC,QAAN,CAAcH,KAAK,OAAOD,MAAOgD,EAAU3C,SAAU,SAAAC,GAAC,OAAI2C,EAAY3C,EAAEC,OAAOP,QAAQS,YAAY,sBAErG,eAACN,EAAA,EAAKqD,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACtD,EAAA,EAAKuD,MAAN,yBACA,cAACvD,EAAA,EAAKC,QAAN,CAAcH,KAAK,WAAWD,MAAOkD,EAAU7C,SAAU,SAAAC,GAAC,OAAI6C,EAAY7C,EAAEC,OAAOP,QAAQS,YAAY,sBAEzG,eAACN,EAAA,EAAKqD,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACtD,EAAA,EAAKuD,MAAN,sBACA,cAACvD,EAAA,EAAKC,QAAN,CAAcH,KAAK,OAAOD,MAAOoD,EAAO/C,SAAU,SAAAC,GAAC,OAAI+C,EAAS/C,EAAEC,OAAOP,QAAQS,YAAY,mBAE/F,eAACN,EAAA,EAAKqD,MAAN,WACE,cAACrD,EAAA,EAAKuD,MAAN,oCACA,cAACvD,EAAA,EAAKC,QAAN,CAAcH,KAAK,OAAOD,MAAOsD,EAAUjD,SAAU,SAACC,GAAD,OAAMiD,EAAYjD,EAAEC,OAAOP,QAAQS,YAAY,qBAGxG,cAACuB,EAAA,EAAD,CAAQ/B,KAAK,SAASoB,QAAQ,OAAOsC,QAvClB,SAACrD,GACpBA,EAAEsD,iBACFC,IAAMC,KAAK,uCAAwC,CACjDC,SAAUf,EACVgB,SAAUd,EACVe,MAAOb,EACPc,SAAUZ,IAEXa,MAAK,SAAAC,GACJ,IAAMC,EAAOD,EAASC,KACtBC,QAAQC,IAAIF,GACZG,OAAOC,KAAK,IAAK,YAElBC,OAAM,SAAApE,GACLgE,QAAQC,IAAI,kCAyBd,wBC5CG,SAASI,EAAUzE,GAAQ,IAAD,EACG6C,mBAAS,IADZ,mBACvBC,EADuB,KACbC,EADa,OAEGF,mBAAS,IAFZ,mBAEvBG,EAFuB,KAEbC,EAFa,KAoB/B,OACE,eAACR,EAAA,EAAD,WACE,2DACA,eAACxC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKqD,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACtD,EAAA,EAAKuD,MAAN,yBACA,cAACvD,EAAA,EAAKC,QAAN,CAAcH,KAAK,OAAOD,MAAOgD,EAAU3C,SAAU,SAAAC,GAAC,OAAI2C,EAAY3C,EAAEC,OAAOP,QAAQS,YAAY,sBAErG,eAACN,EAAA,EAAKqD,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACtD,EAAA,EAAKuD,MAAN,yBACA,cAACvD,EAAA,EAAKC,QAAN,CAAcH,KAAK,WAAWD,MAAOkD,EAAU7C,SAAU,SAAAC,GAAC,OAAI6C,EAAY7C,EAAEC,OAAOP,QAAQS,YAAY,yBAG3G,cAACuB,EAAA,EAAD,CAAQ/B,KAAK,SAASoB,QAAQ,UAAUsC,QA7BvB,SAACrD,GACpBA,EAAEsD,iBAEFC,IAAMC,KAAN,uCAAmD,CACjDC,SAAUf,EACVgB,SAAUd,IAEXiB,MAAK,SAAAC,GACJ,IAAMC,EAAOD,EAASC,KACtBnE,EAAM0E,WAAWP,MAElBK,OAAM,SAAApE,GACLgE,QAAQC,IAAI,oBAiBZ,oBACA,cAAC,OAAD,CAAMzC,GAAE,YAAR,SACE,cAACE,EAAA,EAAD,CAAQX,QAAQ,OAAOT,UAAU,kBAAjC,qC,YCnCKiE,EAAb,kDAEE,aAAe,IAAD,8BACZ,gBAKFC,eAAiB,SAACxE,GAChBA,EAAEsD,iBACF,IAAMmB,EAAQC,aAAaC,QAAQ,SAC7BjC,EAAWgC,aAAaC,QAAQ,QAEtCpB,IAAMC,KAAN,+CAAmDd,EAAnD,sBAAyE,EAAK9C,MAAMY,MAAMiB,KAAM,GAAG,CACjGmD,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAErCZ,MAAK,SAAAC,GACJgB,MAAM,GAAD,OAAI,EAAKlF,MAAMY,MAAMY,MAArB,2BAENgD,OAAM,SAAUW,GACff,QAAQC,IAAIc,OAfd,EAAKjD,MAAQ,GAHD,EAFhB,0CAyBE,WAAU,IACAtB,EAAUC,KAAKb,MAAfY,MAER,OAAKA,EAGH,eAAC8B,EAAA,EAAD,CAAK0C,GAAI,EAAGC,GAAI,EAAhB,UACE,cAACC,EAAA,EAAD,UAAK,qBAAK7E,MAAO,IAAKW,OAAQ,IAAKV,UAAU,eAAeW,IAAKT,EAAMU,UAAWiE,IAAI,mBACtF,eAACD,EAAA,EAAD,WAAK,6BAAK1E,EAAMY,QACd,mBAAGd,UAAU,oBAAb,SAAkCE,EAAMc,cACxC,oBAAGhB,UAAU,cAAb,UACE,sBAAMA,UAAU,QAAhB,qBACA,sBAAMA,UAAU,QAAhB,SAAwB,cAAC,OAAD,CAAMkB,GAAE,kBAAahB,EAAM4E,MAAMC,MAAjC,SAA0C7E,EAAM4E,MAAMC,YAEhF,oBAAG/E,UAAU,iBAAb,UACE,sBAAMA,UAAU,QAAhB,wBACA,sBAAMA,UAAU,QAAhB,SAAwB,cAAC,OAAD,CAAMkB,GAAE,qBAAgBhB,EAAM8E,SAASD,MAAvC,SAAgD7E,EAAM8E,SAASD,YAEzF,cAAC3D,EAAA,EAAD,CAAQ2B,QAAS,kBAAMa,OAAOC,KAAK,IAAK,UAAUpD,QAAQ,YAAYT,UAAU,OAAhF,kBACA,cAACoB,EAAA,EAAD,CAAQ2B,QAAS5C,KAAK+D,eAAgBzD,QAAQ,UAA9C,oCAhBa,SA5BvB,GAA+Ba,IAAMC,WCAxB0D,EAAb,kDAEE,aAAe,IAAD,8BACZ,gBAEKzD,MAAQ,GAHD,EAFhB,0CAQE,WAAU,IACA0D,EAAa/E,KAAKb,MAAlB4F,SAER,OAAKA,EAGH,cAACnD,EAAA,EAAD,CAAW/B,UAAU,gBAArB,SACE,eAACI,EAAA,EAAD,CAAMN,MAAO,CAAEC,MAAO,SAAWC,UAAU,aAAaK,GAAG,UAAUC,KAAK,QAAQC,OAAO,UAAzF,UACA,cAACH,EAAA,EAAK+E,OAAN,UAAcD,EAASH,OACrB,eAAC3E,EAAA,EAAKS,KAAN,WACE,eAACT,EAAA,EAAKW,KAAN,WACE,4BAAImE,EAASE,MACb,uCAAUF,EAASG,YAErB,cAAC,OAAD,CAAMnE,GAAI,IAAV,SACE,cAACE,EAAA,EAAD,CAAQX,QAAQ,YAAYT,UAAU,cAAtC,kCAZY,SAX1B,GAAkCsB,IAAMC,WCA3B+D,EAAb,kDAEE,aAAe,IAAD,8BACZ,gBACK9D,MAAQ,GAFD,EAFhB,0CAOE,WAAU,IACA+D,EAAUpF,KAAKb,MAAfiG,MAER,OAAKA,EAGH,cAACxD,EAAA,EAAD,CAAW/B,UAAU,aAArB,SACE,eAACI,EAAA,EAAD,CAAMN,MAAO,CAAEC,MAAO,SAAWC,UAAU,aAAaK,GAAG,UAAUC,KAAK,QAAQC,OAAO,UAAzF,UACE,eAACH,EAAA,EAAK+E,OAAN,oBAAoBI,EAAMR,QAC1B,eAAC3E,EAAA,EAAKS,KAAN,WACE,cAACT,EAAA,EAAKW,KAAN,UAAYwE,EAAMvE,cAClB,cAAC,OAAD,CAAME,GAAI,IAAV,SACE,cAACE,EAAA,EAAD,CAAQX,QAAQ,YAAYT,UAAU,cAAtC,kCATS,SAVvB,GAA+BsB,IAAMC,W,kBCGxBiE,EAAb,kDACC,aAAe,IAAD,8BACb,gBACKhE,MAAQ,CACZ2B,SAAU,KACVC,SAAU,KACVC,MAAO,KACPC,SAAU,KACVmC,UAAW,GACXC,UAAW,MARC,EADf,qDAaC,WACC,IAAMC,EAAcvB,aAAaC,QAAQ,SACrB,OAAhBsB,GACHxF,KAAKyF,QAAQD,KAhBhB,qBAoBC,SAAQxB,GAAQ,IAAD,OACR/B,EAAWgC,aAAaC,QAAQ,QACtCpB,IACE4C,IADF,+CAC8CzD,GAAY,CACxDkC,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAEpCZ,MAAK,SAACC,GACN,EAAKsC,SAAS,CACb3C,SAAUK,EAASC,KAAKN,SACxBC,SAAUI,EAASC,KAAKL,SACxBC,MAAOG,EAASC,KAAKJ,MACrBC,SAAUE,EAASC,KAAKH,SACxBmC,UAAWjC,EAASC,KAAKgC,eAG1B3B,OAAM,SAAUW,GAChBf,QAAQC,IAAIc,QApChB,kCAwCC,SAAqB/E,EAAGQ,GAAQ,IAAD,OAC9BR,EAAEsD,iBAEF,IAAMZ,EAAWgC,aAAaC,QAAQ,QAChCF,EAAQC,aAAaC,QAAQ,SACnCpB,IACE8C,OADF,+CACiD3D,EADjD,sBACuElC,GAAS,CAC9EoE,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAEpCZ,MAAK,WACLiB,MAAM,gCACN,EAAKwB,uBAGLlC,OAAM,SAAUW,GAChBf,QAAQC,IAAIc,QAvDhB,0BA2DC,SAAa/E,EAAGuG,EAAaC,EAAaC,EAAUC,GAAc,IAAD,OAMhE,GALAjG,KAAK2F,SAAS,CACbJ,UAAW,QAIiB,IADhBhG,EAAE2G,cACNC,gBAMR,OALA5G,EAAEsD,iBACFtD,EAAE6G,uBACFpG,KAAK2F,SAAS,CACbJ,WAAW,IAIbhG,EAAEsD,iBAEF,IAAMmB,EAAQC,aAAaC,QAAQ,SAC7BjC,EAAWgC,aAAaC,QAAQ,QAEtCpB,IAAM,CACLuD,OAAQ,MACRC,IAAI,wCAAD,OAA0CrE,GAC7CkC,QAAS,CAAEC,cAAc,UAAD,OAAYJ,IACpCV,KAAM,CACLN,SAAU8C,GAA4B9F,KAAKqB,MAAM2B,SACjDC,SAAU8C,GAA4B/F,KAAKqB,MAAM4B,SACjDC,MAAO8C,GAAsBhG,KAAKqB,MAAM6B,MACxCC,SAAU8C,GAA4BjG,KAAKqB,MAAM8B,YAGjDC,MAAK,SAACC,GACNgB,MAAM,iBACN,EAAKsB,SAAS,CACb3C,SAAUK,EAASC,KAAKN,SACxBC,SAAUI,EAASC,KAAKL,SACxBC,MAAOG,EAASC,KAAKJ,MACrBC,SAAUE,EAASC,KAAKH,WAEzBc,aAAasC,QAAQ,OAAQ,EAAKlF,MAAM2B,UACxCS,OAAOC,KAAP,iBAAsBzB,GAAY,YAElC0B,OAAM,SAAUW,GAChBf,QAAQC,IAAIc,QArGhB,yBAyGC,SAAYkC,GACXxG,KAAKgD,SAAWwD,IA1GlB,yBA6GC,SAAYA,GACXxG,KAAKiD,SAAWuD,IA9GlB,sBAiHC,SAASA,GACRxG,KAAKkD,MAAQsD,IAlHf,yBAqHC,SAAYA,GACXxG,KAAKmD,SAAWqD,IAtHlB,8BAyHC,SAAiBjH,GAChBA,EAAEsD,iBAEF,IAAMmB,EAAQC,aAAaC,QAAQ,SAC7BjC,EAAWgC,aAAaC,QAAQ,QAEtCpB,IACE8C,OADF,+CACiD3D,GAAY,CAC3DkC,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAEpCZ,MAAK,WACLa,aAAawC,WAAW,QACxBxC,aAAawC,WAAW,SACxBpC,MAAM,iCACNZ,OAAOC,KAAP,IAAiB,YAEjBC,OAAM,SAACpE,GACPgE,QAAQC,IAAIjE,QA1IhB,oBA8IC,WAAU,IAAD,SACyBS,KAAKqB,MAA9BiE,EADA,EACAA,UAAWC,EADX,EACWA,UACbtD,EAAWgC,aAAaC,QAAQ,QAC9B5C,EAAWtB,KAAKb,MAAhBmC,OAER,OACC,cAACM,EAAA,EAAD,CAAW/B,UAAU,eAArB,SACC,eAAC6G,EAAA,EAAD,CAAMC,iBAAiB,UAAUC,YAAY,EAAO/G,UAAU,eAA9D,UACC,cAACgH,EAAA,EAAD,CAAKhH,UAAU,WAAWiH,SAAS,UAAUC,MAAM,UAAnD,SACA,eAACnF,EAAA,EAAD,CAAW/B,UAAU,eAArB,UACE,qBAAIA,UAAU,oBAAoBF,MAAO,CAAEqH,MAAO,QAAlD,UAA4D/E,EAA5D,wBACA,eAACJ,EAAA,EAAD,CAAKhC,UAAU,mCAAf,UACuB,IAArByF,EAAU2B,QAAgB,qBAAKpH,UAAU,eAAf,0CAGzByF,EAAU2B,OAAS,GACnB3F,EAAOQ,KAAI,SAAC/B,GACX,GAAIA,EAAMiB,MAAQsE,EAAU4B,MAAK,SAACC,GAAD,OAAcA,IAAapH,EAAMiB,OACjE,OAEE,eAACf,EAAA,EAAD,CAAMN,MAAO,CAAEC,MAAO,SAAWC,UAAU,OAA3C,UACC,cAACI,EAAA,EAAKI,IAAN,CAAUC,QAAQ,MAAMV,MAAO,IAAKW,OAAQ,IAAKC,IAAKT,EAAMU,YAC5D,cAACR,EAAA,EAAKS,KAAN,CAAWb,UAAU,8BAArB,SACC,cAACI,EAAA,EAAKU,MAAN,CAAYd,UAAU,mBAAtB,SAA0CE,EAAMY,UAEjD,cAACV,EAAA,EAAKa,OAAN,UACC,cAACG,EAAA,EAAD,CAAQmG,KAAK,KAAKlG,OAAK,EAACrB,UAAU,iCAAiCS,QAAQ,iBAAiBsC,QAAS,SAACrD,GAAD,OAAO,EAAK8H,qBAAqB9H,EAAGQ,EAAMiB,MAA/I,uCANqDjB,EAAMiB,gBAmBtE,cAAC6F,EAAA,EAAD,CAAKhH,UAAU,WAAWiH,SAAS,SAASC,MAAM,SAAlD,SACC,eAAC9G,EAAA,EAAD,CAAMJ,UAAU,cAAhB,UACC,qBAAIA,UAAU,oBAAoBF,MAAO,CAAEqH,MAAO,QAAlD,oBAAmE/E,EAAnE,gBACA,cAAChC,EAAA,EAAKS,KAAN,UACC,eAACtB,EAAA,EAAD,CAAMkI,YAAU,EAAC/B,UAAWA,EAAW1F,UAAU,cAAc0H,SAAU,SAAChI,GAAD,OAAO,EAAKiI,aAAajI,EAAG,EAAKyD,SAAU,EAAKC,SAAU,EAAKC,MAAO,EAAKC,WAApJ,UACC,eAAC/D,EAAA,EAAKqD,MAAN,CAAYC,UAAU,oBAAtB,UACC,cAACtD,EAAA,EAAKuD,MAAN,CAAY9C,UAAU,aAAtB,sBACA,cAACT,EAAA,EAAKC,QAAN,CAAcH,KAAK,OAAOQ,YAAY,kBAAkBJ,SAAU,SAACC,GAAD,OAAO,EAAK2C,YAAY3C,EAAEC,OAAOP,QAAQwI,QAAQ,oBACnH,cAACrI,EAAA,EAAKC,QAAQqI,SAAd,CAAuBxI,KAAK,UAA5B,uFAED,eAACE,EAAA,EAAKqD,MAAN,CAAYC,UAAU,oBAAtB,UACC,eAACtD,EAAA,EAAKuD,MAAN,CAAY9C,UAAU,aAAtB,qBACS,sBAAMA,UAAU,WAAhB,kBAET,cAACT,EAAA,EAAKC,QAAN,CAAcH,KAAK,WAAWQ,YAAY,0BAA0BJ,SAAU,SAACC,GAAD,OAAO,EAAK6C,YAAY7C,EAAEC,OAAOP,QAAQwI,QAAQ,QAAQE,UAAQ,IAC/I,cAACvI,EAAA,EAAKC,QAAQqI,SAAd,CAAuBxI,KAAK,UAA5B,0EAED,eAACE,EAAA,EAAKqD,MAAN,CAAYC,UAAU,iBAAtB,UACC,cAACtD,EAAA,EAAKuD,MAAN,CAAY9C,UAAU,aAAtB,mBACA,cAACT,EAAA,EAAKC,QAAN,CAAcH,KAAK,QAAQQ,YAAY,eAAeJ,SAAU,SAACC,GAAD,OAAO,EAAK+C,SAAS/C,EAAEC,OAAOP,UAC9F,cAACG,EAAA,EAAKC,QAAQqI,SAAd,CAAuBxI,KAAK,UAA5B,oDAED,eAACE,EAAA,EAAKqD,MAAN,CAAYC,UAAU,oBAAtB,UACC,cAACtD,EAAA,EAAKuD,MAAN,CAAY9C,UAAU,aAAtB,sBACA,cAACT,EAAA,EAAKC,QAAN,CAAcH,KAAK,OAAOQ,YAAY,aAAaJ,SAAU,SAACC,GAAD,OAAO,EAAKiD,YAAYjD,EAAEC,OAAOP,UAC9F,cAACG,EAAA,EAAKC,QAAQqI,SAAd,CAAuBxI,KAAK,UAA5B,+CAED,cAAC+B,EAAA,EAAD,CAAQpB,UAAU,wBAAwBX,KAAK,SAA/C,8BAQJ,cAAC2H,EAAA,EAAD,CAAKhH,UAAU,WAAWiH,SAAS,SAASC,MAAM,iBAAlD,SACC,eAAC9G,EAAA,EAAD,CAAMJ,UAAU,cAAhB,UACC,qBAAIA,UAAU,oBAAoBF,MAAO,CAAEqH,MAAO,QAAlD,oBAAmE/E,EAAnE,gBACA,cAAChC,EAAA,EAAKS,KAAN,UACC,cAACO,EAAA,EAAD,CAAQpB,UAAU,+BAA+BS,QAAQ,SAASY,OAAK,EAAC0B,QAAS,SAACrD,GAAD,OAAO,EAAKqI,iBAAiBrI,IAA9G,uFA5NR,GAAiC4B,IAAMC,WCU1ByG,EAAb,uKAGE,WACE,IAAIrC,EAAcvB,aAAaC,QAAQ,SACnC4D,EAAO7D,aAAaC,QAAQ,QACZ,OAAhBsB,IACFxF,KAAKb,MAAM4I,QAAQD,GACnB9H,KAAKgI,UAAUxC,MARrB,wBAcE,SAAWyC,GACT1E,QAAQC,IAAIyE,GACZjI,KAAKb,MAAM4I,QAAQE,EAASH,KAAK9E,UACjCiB,aAAasC,QAAQ,QAAS0B,EAASjE,OACvCC,aAAasC,QAAQ,OAAQ0B,EAASH,KAAK9E,UAC3ChD,KAAKgI,UAAUC,EAASjE,SAnB5B,sBAsBE,WACEC,aAAawC,WAAW,SACxBxC,aAAawC,WAAW,QACxBhD,OAAOC,KAAK,IAAK,WAzBrB,uBA4BE,SAAUM,GAAQ,IAAD,OACflB,IAAM4C,IAAI,wCAAyC,CACjDvB,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAErCZ,MAAK,SAAAC,GAEJ,EAAKlE,MAAM+I,UAAU7E,EAASC,SAE/BK,OAAM,SAAUW,GACff,QAAQC,IAAIc,QArClB,oBA2CE,WAAU,IAAD,SAIgBtE,KAAKb,MAAtBmC,EAJC,EAIDA,OAAQwG,EAJP,EAIOA,KAQd,OAAKxG,EAGH,cAAC,gBAAD,UACE,eAACM,EAAA,EAAD,CAAWuG,MAAM,KAAKtI,UAAU,YAAhC,UACIiI,GACA,eAACM,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKpI,GAAG,UAAUI,QAAQ,OAAOT,UAAU,OAA3E,UACE,cAAC,gBAAD,CAAekB,GAAG,IAAlB,SACE,cAACqH,EAAA,EAAOG,MAAR,yBAEF,cAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,cAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,wBAApB,SACE,eAACC,EAAA,EAAD,CAAK/I,UAAU,UAAf,UACE,cAAC+I,EAAA,EAAIC,KAAL,UACE,cAAC,gBAAD,CAAe9H,GAAE,iBAAY+G,GAA7B,SACE,cAACc,EAAA,EAAIE,KAAL,0BAGJ,cAACF,EAAA,EAAIC,KAAL,UACE,cAAC5H,EAAA,EAAD,CAAQ2B,QAAS5C,KAAK+I,SAAUzI,QAAQ,UAAUpB,KAAK,SAASW,UAAU,gBAA1E,+BAMV,cAACgC,EAAA,EAAD,CAAKhC,UAAU,mCAAf,SACE,cAAC,IAAD,CAAOmJ,OAAK,EAACC,KAAK,IAAIC,OAAQ,WAC5B,OAAKpB,EACE,cAAC,EAAD,CAAYxG,OAAQA,IADT,cAACsC,EAAD,CAAWC,WAAY,SAAAiE,GAAI,OAAI,EAAKjE,WAAWiE,WAKrE,cAAC,IAAD,CAAOmB,KAAK,YAAYC,OAAQ,kBAAM,cAACnH,EAAD,OACtC,cAAC,IAAD,CAAOiH,OAAK,EAACC,KAAK,mBAAmBC,OAAQ,gBAAEC,EAAF,EAAEA,MAAF,OAAa,cAAC,EAAD,CAAWpJ,MAAOuB,EAAO4F,MAAK,SAAAzF,GAAC,OAAIA,EAAET,MAAQmI,EAAMC,OAAOC,gBACpH,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,mBAAmBC,OAAQ,YAAgB,IAAbC,EAAY,EAAZA,MAC9C,OAAK7H,EACE,cAAC,EAAD,CAAcyD,SAAUzD,EAAO4F,MAAK,SAAAzF,GAAC,OAAIA,EAAEoD,SAASD,OAASuE,EAAMC,OAAOE,QAAMzE,WADnE,qBAAKhF,UAAU,iBAGrC,cAAC,IAAD,CAAOmJ,OAAK,EAACC,KAAK,gBAAgBC,OAAQ,YAAgB,IAAbC,EAAY,EAAZA,MAC3C,OAAK7H,EACE,cAAC,EAAD,CAAW8D,MAAO9D,EAAO4F,MAAK,SAAAzF,GAAC,OAAIA,EAAEkD,MAAMC,OAASuE,EAAMC,OAAOE,QAAM3E,QAD1D,qBAAK9E,UAAU,iBAGrC,cAAC,IAAD,CAAOmJ,OAAK,EAACC,KAAK,mBAAmBC,OAAQ,WAChD,OAAKpB,EACiB,IAAlBxG,EAAO2F,OACJ,cAAC,EAAD,CAAa3F,OAAQA,SAD5B,EADkB,cAACsC,EAAD,CAAWC,WAAY,SAACiE,GAAD,OAAU,EAAKjE,WAAWiE,cA3ClD,qBAAKjI,UAAU,YAAf,yBAvDxB,GAA8BsB,IAAMC,WAgHrBrC,eAJO,SAAAsC,GACpB,MAAO,CAACC,OAAQD,EAAMC,OAAQwG,KAAMzG,EAAMyG,QAGJ,CAACI,UVjIlC,SAAmBjJ,GACxB,MAAO,CACLC,KAAMN,EACNK,UU8HgD8I,QVnH7C,SAAiB9I,GACtB,MAAO,CACLC,KAAMJ,EACNG,WUgHWF,CAA+C8I,GC9F9D,IAMe0B,EANGC,0BAAgB,CAChC/J,iBApCF,WAA+C,IAArB4B,EAAoB,uDAAZ,GAAIoI,EAAQ,uCAC5C,OAAQA,EAAOvK,MACb,KAAKL,EACH,OAAO4K,EAAOxK,MAChB,QACE,OAAOoC,IAgCXC,OA5BF,WAAqC,IAArBD,EAAoB,uDAAZ,GAAIoI,EAAQ,uCAClC,OAAQA,EAAOvK,MACb,KAAKN,EACH,OAAO6K,EAAOxK,MAChB,QACE,OAAOoC,IAwBXyG,KApBF,WAAmC,IAArBzG,EAAoB,uDAAZ,GAAIoI,EAAQ,uCAChC,OAAQA,EAAOvK,MACb,KAAKJ,EACH,OAAO2K,EAAOxK,MAChB,QACE,OAAOoC,MCjBPqI,EAAQC,sBAAYJ,EAAWK,8BAUtBC,MARf,WACE,OACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,OCHSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5G,MAAK,YAAkD,IAA/C6G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASpB,OACP,cAAC,IAAMqB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.b9dc2b1b.chunk.js","sourcesContent":["export const SET_MOVIES = \"SET_MOVIES\";\r\nexport const SET_FILTER = \"SET_FILTER\";\r\nexport const SET_USER = \"SET_USER\";\r\n\r\nexport function setMovies(value) {\r\n  return {\r\n    type: SET_MOVIES,\r\n    value,\r\n  };\r\n}\r\n\r\nexport function setFilter(value) {\r\n  return {\r\n    type: SET_FILTER,\r\n    value,\r\n  };\r\n}\r\n\r\nexport function setUser(value) {\r\n  return {\r\n    type: SET_USER,\r\n    value,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { setFilter } from '../../actions/actions';\r\n\r\nfunction VisibilityFilterInput(props) {\r\n  return <Form.Control\r\n    onChange={e => props.setFilter(e.target.value)}\r\n    value={props.visibilityFilter}\r\n    placeholder=\"Search for Title\"\r\n    style={{ width: '20rem' }}\r\n    className=\"mb-3\"\r\n  />;\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setFilter }\r\n)(VisibilityFilterInput);","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './movie-card.scss';\r\n\r\nexport class MovieCard extends React.Component {\r\n  render() {\r\n    // This is given to the <MovieCard/> component by the outer world\r\n    // which, in this case, is `MainView`, as `MainView` is what’s\r\n    // connected to your database via the movies endpoint of your API\r\n    const { movie } = this.props;\r\n\r\n    return (\r\n    <Card style={{ width: '16rem' }} bg=\"danger\" text=\"white\" border=\"primary\" className=\"mb-5\">\r\n      <Card.Img variant=\"top\" width={256} height={414} src={movie.ImagePath} />\r\n      <Card.Body>\r\n        <Card.Title>{movie.Title}</Card.Title>\r\n        <Card.Text>{movie.Description}</Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n      <Link to={`/movies/${movie._id}`}>\r\n          <Button variant=\"light\" block>Open</Button>\r\n        </Link>\r\n      </Card.Footer>\r\n    </Card>\r\n    );\r\n  }\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.shape({\r\n    Title: PropTypes.string\r\n  }).isRequired,\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport VisibilityFilterInput from '../visibility-filter-input/visibility-filter-input';\r\nimport { MovieCard } from '../movie-card/movie-card';\r\nimport {Container, Row} from \"react-bootstrap\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { visibilityFilter } = state;\r\n  return { visibilityFilter };\r\n};\r\n\r\nfunction MoviesList(props) {\r\n  const { movies, visibilityFilter } = props;\r\n  let filteredMovies = movies;\r\n\r\n  if (visibilityFilter !== '') {\r\n    filteredMovies = movies.filter(m => m.Title.toLowerCase().includes(visibilityFilter.toLowerCase()));\r\n  }\r\n\r\n  if (!movies) return <div className=\"main-view\"/>;\r\n\r\n  return <Container className=\"ml-0 mr-0\">\r\n    <VisibilityFilterInput visibilityFilter={visibilityFilter} />\r\n    <Row className=\"movies-list justify-content-around\">\r\n      {filteredMovies.map(m => <MovieCard key={m._id} movie={m}/>)}\r\n    </Row>\r\n  </Container>;\r\n}\r\n\r\nexport default connect(mapStateToProps)(MoviesList);","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\n\r\nexport function RegistrationView (props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [birthday, setBirthday] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios.post('https://marvelix.herokuapp.com/users', {\r\n      Username: username,\r\n      Password: password,\r\n      Email: email,\r\n      Birthday: birthday\r\n    })\r\n    .then(response => {\r\n      const data = response.data;\r\n      console.log(data);\r\n      window.open('/', '_self'); // the second argument '_self' is necessary so that the page will open in the current tab\r\n    })\r\n    .catch(e => {\r\n      console.log('error registering the user')\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n    <h1>Sign Up to MARVELIX</h1>\r\n    <Form>\r\n      <Form.Group controlId=\"formBasicUsername\">\r\n        <Form.Label>Username: </Form.Label>\r\n        <Form.Control type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Enter Username\" />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password: </Form.Label>\r\n        <Form.Control type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Enter Password\" /> \r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email: </Form.Label>\r\n        <Form.Control type=\"text\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Enter Email\" /> \r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Enter Date of Birth: </Form.Label>\r\n        <Form.Control type=\"text\" value={birthday} onChange={(e)=> setBirthday(e.target.value)} placeholder=\"MM-DD-YYYY\" />\r\n      </Form.Group>\r\n    </Form>\r\n    <Button type=\"submit\" variant=\"info\" onClick={handleSubmit}>Sign Up</Button>\r\n  </Container>\r\n  );\r\n};\r\n\r\nRegistrationView.propTypes = {\r\n  user: PropTypes.shape({\r\n    Username: PropTypes.string.isRequired,\r\n    Password: PropTypes.string.isRequired,\r\n    Email: PropTypes.string.isRequired,\r\n    Birthday: PropTypes.instanceOf(Date).isRequired\r\n  })\r\n};","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport function LoginView(props) {\r\n  const [ username, setUsername ] = useState('');\r\n  const [ password, setPassword ] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /* Send a request to the server for authentication */\r\n    axios.post(`https://marvelix.herokuapp.com/login`, {\r\n      Username: username,\r\n      Password: password\r\n    })\r\n    .then(response => {\r\n      const data = response.data;\r\n      props.onLoggedIn(data);\r\n    })\r\n    .catch(e => {\r\n      console.log('no such user')\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Please log in to MARVELIX</h1>\r\n      <Form>\r\n        <Form.Group controlId=\"formBasicUsername\">\r\n          <Form.Label>Username: </Form.Label>\r\n          <Form.Control type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Enter Username\" />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password: </Form.Label>\r\n          <Form.Control type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Enter Password\" /> \r\n        </Form.Group>\r\n      </Form>\r\n      <Button type=\"submit\" variant=\"success\" onClick={handleSubmit}>Log In</Button>\r\n      <Link to={`/register`}>\r\n        <Button variant=\"link\" className=\"button-register\">Create new Account</Button>\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n\r\nLoginView.propTypes = {\r\n  user: PropTypes.shape({\r\n    Username: PropTypes.string.isRequired,\r\n    Password: PropTypes.string.isRequired,\r\n  }),\r\n  onLoggedIn: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport class MovieView extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  addToFavorites = (e) => {\r\n    e.preventDefault()\r\n    const token = localStorage.getItem('token');\r\n    const username = localStorage.getItem('user');\r\n\r\n    axios.post(`https://marvelix.herokuapp.com/users/${username}/Favorites/${this.props.movie._id}`,{},{\r\n      headers: { Authorization: `Bearer ${token}`}\r\n    })\r\n    .then(response => {\r\n      alert(`${this.props.movie.Title} added to favorites`)\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { movie } = this.props;\r\n\r\n    if (!movie) return null;\r\n\r\n    return (\r\n      <Row sm={1} md={2}>\r\n        <Col><img width={256} height={414} className=\"movie-poster\" src={movie.ImagePath} alt=\"Movie Poster\" /></Col>\r\n        <Col><h3>{movie.Title}</h3>\r\n          <p className=\"movie-description\">{movie.Description}</p>\r\n          <p className=\"movie-phase\">\r\n            <span className=\"label\">Phase: </span>\r\n            <span className=\"value\"><Link to={`/phases/${movie.Phase.Name}`}>{movie.Phase.Name}</Link></span>\r\n          </p>\r\n          <p className=\"movie-director\">\r\n            <span className=\"label\">Director: </span>\r\n            <span className=\"value\"><Link to={`/directors/${movie.Director.Name}`}>{movie.Director.Name}</Link></span>\r\n          </p>\r\n          <Button onClick={() => window.open(\"/\", \"_self\")} variant=\"secondary\" className=\"mr-3\">Back</Button>\r\n          <Button onClick={this.addToFavorites} variant=\"success\">Add to favorites</Button>\r\n          </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nMovieView.propTypes = {\r\n  movie: PropTypes.shape({\r\n    Title: PropTypes.string.isRequired,\r\n    Description: PropTypes.string.isRequired,\r\n    Phase: PropTypes.shape({\r\n      Name: PropTypes.string.isRequired\r\n    }),\r\n    Director: PropTypes.shape({\r\n      Name: PropTypes.string.isRequired\r\n    }),\r\n    ImagePath: PropTypes.string.isRequired\r\n  })\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport class DirectorView extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { director } = this.props;\r\n\r\n    if (!director) return null;\r\n\r\n    return(\r\n      <Container className=\"director-view\">\r\n        <Card style={{ width: \"30rem\" }} className=\"phase-card\" bg=\"primary\" text=\"white\" border=\"primary\">\r\n        <Card.Header>{director.Name}</Card.Header>\r\n          <Card.Body>\r\n            <Card.Text>\r\n              <p>{director.Bio}</p>\r\n              <p>Born: {director.Birth}</p>\r\n            </Card.Text>\r\n            <Link to={\"/\"}>\r\n              <Button variant=\"secondary\" className=\"button-back\">All Movies</Button>\r\n            </Link>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nDirectorView.propTypes = {\r\n  director: PropTypes.shape({\r\n    Name: PropTypes.string.isRequired,\r\n    Bio: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport class PhaseView extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { phase } = this.props;\r\n\r\n    if (!phase) return null;\r\n\r\n    return (\r\n      <Container className=\"phase-view\">\r\n        <Card style={{ width: \"30rem\" }} className=\"phase-card\" bg=\"primary\" text=\"white\" border=\"primary\">\r\n          <Card.Header>Phase {phase.Name}</Card.Header>\r\n          <Card.Body>\r\n            <Card.Text>{phase.Description}</Card.Text>\r\n            <Link to={\"/\"}>\r\n              <Button variant=\"secondary\" className=\"button-back\">All Movies</Button>\r\n            </Link>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nPhaseView.propTypes = {\r\n  phase: PropTypes.shape({\r\n    Name: PropTypes.string.isRequired,\r\n    Description: PropTypes.string.isRequired\r\n  })\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nexport class ProfileView extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tUsername: null,\r\n\t\t\tPassword: null,\r\n\t\t\tEmail: null,\r\n\t\t\tBirthday: null,\r\n\t\t\tFavorites: [],\r\n\t\t\tvalidated: null,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst accessToken = localStorage.getItem('token');\r\n\t\tif (accessToken !== null) {\r\n\t\t\tthis.getUser(accessToken);\r\n\t\t}\r\n\t}\r\n\r\n\tgetUser(token) {\r\n\t\tconst username = localStorage.getItem('user');\r\n\t\taxios\r\n\t\t\t.get(`https://marvelix.herokuapp.com/users/${username}`, {\r\n\t\t\t\theaders: { Authorization: `Bearer ${token}` },\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tUsername: response.data.Username,\r\n\t\t\t\t\tPassword: response.data.Password,\r\n\t\t\t\t\tEmail: response.data.Email,\r\n\t\t\t\t\tBirthday: response.data.Birthday,\r\n\t\t\t\t\tFavorites: response.data.Favorites,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n\r\n\thandleRemoveFavorite(e, movie) {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst username = localStorage.getItem('user');\r\n\t\tconst token = localStorage.getItem('token');\r\n\t\taxios\r\n\t\t\t.delete(`https://marvelix.herokuapp.com/users/${username}/Favorites/${movie}`, {\r\n\t\t\t\theaders: { Authorization: `Bearer ${token}` },\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\talert('Movie removed from favorites');\r\n\t\t\t\tthis.componentDidMount();\r\n\t\t\t\t// window.open('_self');\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n\r\n\thandleUpdate(e, newUsername, newPassword, newEmail, newBirthday) {\r\n\t\tthis.setState({\r\n\t\t\tvalidated: null,\r\n\t\t});\r\n\r\n\t\tconst form = e.currentTarget;\r\n\t\tif (form.checkValidity() === false) {\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t\tthis.setState({\r\n\t\t\t\tvalidated: true,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\te.preventDefault();\r\n\r\n\t\tconst token = localStorage.getItem('token');\r\n\t\tconst username = localStorage.getItem('user');\r\n\r\n\t\taxios({\r\n\t\t\tmethod: 'put',\r\n\t\t\turl: `https://marvelix.herokuapp.com/users/${username}`,\r\n\t\t\theaders: { Authorization: `Bearer ${token}` },\r\n\t\t\tdata: {\r\n\t\t\t\tUsername: newUsername ? newUsername : this.state.Username,\r\n\t\t\t\tPassword: newPassword ? newPassword : this.state.Password,\r\n\t\t\t\tEmail: newEmail ? newEmail : this.state.Email,\r\n\t\t\t\tBirthday: newBirthday ? newBirthday : this.state.Birthday,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\talert('Saved Changes');\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tUsername: response.data.Username,\r\n\t\t\t\t\tPassword: response.data.Password,\r\n\t\t\t\t\tEmail: response.data.Email,\r\n\t\t\t\t\tBirthday: response.data.Birthday,\r\n\t\t\t\t});\r\n\t\t\t\tlocalStorage.setItem('user', this.state.Username);\r\n\t\t\t\twindow.open(`/users/${username}`, '_self');\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsetUsername(input) {\r\n\t\tthis.Username = input;\r\n\t}\r\n\r\n\tsetPassword(input) {\r\n\t\tthis.Password = input;\r\n\t}\r\n\r\n\tsetEmail(input) {\r\n\t\tthis.Email = input;\r\n\t}\r\n\r\n\tsetBirthday(input) {\r\n\t\tthis.Birthday = input;\r\n\t}\r\n\r\n\thandleDeregister(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst token = localStorage.getItem('token');\r\n\t\tconst username = localStorage.getItem('user');\r\n\r\n\t\taxios\r\n\t\t\t.delete(`https://marvelix.herokuapp.com/users/${username}`, {\r\n\t\t\t\theaders: { Authorization: `Bearer ${token}` },\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tlocalStorage.removeItem('user');\r\n\t\t\t\tlocalStorage.removeItem('token');\r\n\t\t\t\talert('Your account has been deleted');\r\n\t\t\t\twindow.open(`/`, '_self');\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { Favorites, validated } = this.state;\r\n\t\tconst username = localStorage.getItem('user');\r\n\t\tconst { movies } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Container className=\"profile-view\">\r\n\t\t\t\t<Tabs defaultActiveKey=\"profile\" transition={false} className=\"profile-tabs\">\r\n\t\t\t\t\t<Tab className=\"tab-item\" eventKey=\"profile\" title=\"Profile\">\r\n\t\t\t\t\t<Container className=\"profile-card\">\r\n\t\t\t\t\t\t\t<h3 className=\"profile-title m-2\" style={{ color: \"blue\"}}>{username}'s Favorite Movies</h3>\r\n\t\t\t\t\t\t\t<Row className=\"ml-0 mr-0 justify-content-around\">\r\n\t\t\t\t\t\t\t\t{Favorites.length === 0 && <div className=\"card-content\">You have no favorite movies.</div>}\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{Favorites.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\tmovies.map((movie) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (movie._id === Favorites.find((favMovie) => favMovie === movie._id)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card style={{ width: '16rem' }} className=\"mb-5\" key={movie._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Img variant=\"top\" width={256} height={414} src={movie.ImagePath} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Body className=\"movie-card-body text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Title className=\"movie-card-title\">{movie.Title}</Card.Title>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" block className=\"profile-button remove-favorite\" variant=\"outline-danger\" onClick={(e) => this.handleRemoveFavorite(e, movie._id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRemove from Favorites\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab className=\"tab-item\" eventKey=\"update\" title=\"Update\">\r\n\t\t\t\t\t\t<Card className=\"update-card\">\r\n\t\t\t\t\t\t\t<h3 className=\"profile-title m-2\" style={{ color: \"blue\"}}>Update {username}'s Profile</h3>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Form noValidate validated={validated} className=\"update-form\" onSubmit={(e) => this.handleUpdate(e, this.Username, this.Password, this.Email, this.Birthday)}>\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicUsername\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label className=\"form-label\">Username</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Change Username\" onChange={(e) => this.setUsername(e.target.value)} pattern=\"[a-zA-Z0-9]{2,}\" />\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">Please enter a valid username with at least 2 alphanumeric characters.</Form.Control.Feedback>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label className=\"form-label\">\r\n\t\t\t\t\t\t\t\t\t\t\tPassword<span className=\"required\">*</span>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Current or New Password\" onChange={(e) => this.setPassword(e.target.value)} pattern=\".{2,}\" required />\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">Please enter a valid password with at least 2 characters.</Form.Control.Feedback>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label className=\"form-label\">Email</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Change Email\" onChange={(e) => this.setEmail(e.target.value)} />\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">Please enter a valid email address.</Form.Control.Feedback>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicBirthday\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label className=\"form-label\">Birthday</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"date\" placeholder=\"MM-DD-YYYY\" onChange={(e) => this.setBirthday(e.target.value)} />\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">Please enter a valid birthday.</Form.Control.Feedback>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Button className=\"update profile-button\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Tab>\r\n\r\n\t\t\t\t\t<Tab className=\"tab-item\" eventKey=\"delete\" title=\"Delete Profile\">\r\n\t\t\t\t\t\t<Card className=\"update-card\">\r\n\t\t\t\t\t\t\t<h3 className=\"profile-title m-2\" style={{ color: \"blue\"}}>Delete {username}'s Profile</h3>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Button className=\"profile-button delete-button\" variant=\"danger\" block onClick={(e) => this.handleDeregister(e)}>\r\n\t\t\t\t\t\t\t\t\tClick Here If You're Sure You Want To Delete Your Profile\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nProfileView.propTypes = {\r\n\tuser: PropTypes.shape({\r\n\t\tFavorites: PropTypes.arrayOf(\r\n\t\t\tPropTypes.shape({\r\n\t\t\t\t_id: PropTypes.string.isRequired,\r\n\t\t\t\tTitle: PropTypes.string.isRequired,\r\n\t\t\t})\r\n\t\t),\r\n\t\tUsername: PropTypes.string.isRequired,\r\n\t\tEmail: PropTypes.string.isRequired,\r\n\t\tBirthday: PropTypes.string,\r\n\t}),\r\n};","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\"; // import { BrowserRouter as Router, Link, Route} from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {connect} from \"react-redux\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nimport {setMovies, setUser} from \"../../actions/actions\";\r\nimport MoviesList from \"../movies-list/movies-list\";\r\nimport {RegistrationView} from \"../registration-view/registration-view\";\r\nimport {LoginView} from \"../login-view/login-view\";\r\nimport {MovieView} from \"../movie-view/movie-view\";\r\nimport {DirectorView} from \"../director-view/director-view\";\r\nimport {PhaseView} from \"../phase-view/phase-view\";\r\nimport {ProfileView} from \"../profile-view/profile-view\";\r\n\r\nexport class MainView extends React.Component {\r\n\r\n  // One of the \"hooks\" available in a React Component\r\n  componentDidMount() {\r\n    let accessToken = localStorage.getItem('token');\r\n    let user = localStorage.getItem(\"user\");\r\n    if (accessToken !== null) {\r\n      this.props.setUser(user);\r\n      this.getMovies(accessToken);\r\n    }\r\n  }\r\n\r\n  /* When a user successfully logs in, this function updates the `user` property in state to that *particular user*/\r\n\r\n  onLoggedIn(authData) {\r\n    console.log(authData);\r\n    this.props.setUser(authData.user.Username);\r\n    localStorage.setItem(\"token\", authData.token);\r\n    localStorage.setItem(\"user\", authData.user.Username);\r\n    this.getMovies(authData.token);\r\n  }\r\n\r\n  onLogOut() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    window.open('/', '_self');\r\n  }\r\n\r\n  getMovies(token) {\r\n    axios.get(\"https://marvelix.herokuapp.com/movies\", {\r\n      headers: { Authorization: `Bearer ${token}`}\r\n    })\r\n    .then(response => {\r\n      // Update with React Redux Code\r\n      this.props.setMovies(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  // This overrides the render() method of the superclass\r\n  // No need to call super() though, as it does nothing by default\r\n  render() {\r\n    // If the state isn't initialized, this will throw on runtime\r\n    // before the data is initially loaded\r\n    // action setMovies and setUser is used here\r\n    let { movies, user } = this.props;\r\n\r\n    /* If there is no user, the LoginView is rendered. If there is a user logged in, the user details are *passed as a prop to the LoginView*/\r\n\r\n    //if (!user) return <LoginView onLoggedIn={user => this.onLoggedIn(user)} />;\r\n    //if (!user) return <div className=\"main-view\"/>;\r\n\r\n    // Before the movies have been loaded\r\n    if (!movies) return <div className=\"main-view\">LOADING</div>;\r\n\r\n    return (\r\n      <Router>\r\n        <Container fluid=\"md\" className=\"main-view\">\r\n          { user && \r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\" className=\"mb-5\">\r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand>MARVELIX</Navbar.Brand>\r\n              </LinkContainer>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  <Nav.Item>\r\n                    <LinkContainer to={`/users/${user}`}>\r\n                      <Nav.Link>Profile</Nav.Link>\r\n                    </LinkContainer>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Button onClick={this.onLogOut} variant=\"warning\" type=\"submit\" className=\"button logout\">Log Out</Button>\r\n                  </Nav.Item>                  \r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          }\r\n          <Row className=\"ml-0 mr-0 justify-content-around\">\r\n            <Route exact path=\"/\" render={() => {\r\n              if (!user) return <LoginView onLoggedIn={user => this.onLoggedIn(user)} />;\r\n              return <MoviesList movies={movies}/>;\r\n              }\r\n            }/>\r\n          </Row>\r\n          <Route path=\"/register\" render={() => <RegistrationView />} />\r\n          <Route exact path=\"/movies/:movieId\" render={({match}) => <MovieView movie={movies.find(m => m._id === match.params.movieId)}/>}/>\r\n          <Route exact path=\"/directors/:name\" render={({ match }) => {\r\n            if (!movies) return <div className=\"main-view\"/>;\r\n            return <DirectorView director={movies.find(m => m.Director.Name === match.params.name).Director}/>\r\n          }} />\r\n          <Route exact path=\"/phases/:name\" render={({ match }) => {\r\n            if (!movies) return <div className=\"main-view\" />;\r\n            return <PhaseView phase={movies.find(m => m.Phase.Name === match.params.name).Phase}/>\r\n          }} />\r\n          <Route exact path=\"/users/:username\" render={() => {\r\n\t\t\t\t\t\t\tif (!user) return <LoginView onLoggedIn={(user) => this.onLoggedIn(user)} />;\r\n\t\t\t\t\t\t\tif (movies.length === 0) return;\r\n\t\t\t\t\t\t\treturn <ProfileView movies={movies} />;\r\n\t\t\t\t\t}} />\r\n        </Container>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n  return {movies: state.movies, user: state.user}\r\n}\r\n\r\nexport default connect(mapStateToProps, {setMovies, setUser})(MainView);\r\n\r\nMainView.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      _id: PropTypes.string.isRequired,\r\n      Title: PropTypes.string.isRequired,\r\n      Description: PropTypes.string.isRequired,\r\n      Phase: PropTypes.shape({\r\n        Name: PropTypes.string.isRequired,\r\n        Description: PropTypes.string.isRequired\r\n      }),\r\n      Director: PropTypes.shape({\r\n        Name: PropTypes.string.isRequired,\r\n        Bio: PropTypes.string.isRequired,\r\n        Birth: PropTypes.string.isRequired,\r\n        Death: PropTypes.string.isRequired\r\n      }),\r\n      ImagePath: PropTypes.string.isRequired,\r\n      Featured: PropTypes.bool.isRequired\r\n    })\r\n  ),\r\n  user: PropTypes.string.isRequired\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { SET_FILTER, SET_MOVIES, SET_USER } from \"../actions/actions\";\r\n\r\nfunction visibilityFilter(state = \"\", action) {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction movies(state = [], action) {\r\n  switch (action.type) {\r\n    case SET_MOVIES:\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction user(state = \"\", action) {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n/* USE COMBINE REDUCERS INSTEAD\r\nfunction moviesApp(state = {}, action) {\r\n  return {\r\n    visibilityFilter: visibilityFilter(state.visibilityFilter, action),\r\n    movies: movies(state.movies, action)\r\n  }\r\n}*/\r\n\r\nconst moviesApp = combineReducers({\r\n  visibilityFilter,\r\n  movies,\r\n  user,\r\n});\r\n\r\nexport default moviesApp;\r\n","import React from 'react';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport {devToolsEnhancer} from \"redux-devtools-extension\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport MainView from \"./components/main-view/main-view\";\r\nimport moviesApp from \"./reducers/reducers\";\r\n\r\n\r\nconst store = createStore(moviesApp, devToolsEnhancer());\r\n\r\nfunction App() {\r\n  return(\r\n    <Provider store={store}>\r\n      <MainView/>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}